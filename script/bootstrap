#!/bin/sh

# script/bootstrap: Resolve all dependencies that the application requires to
#                   run.

set -e

cd "$(dirname "$0")/.."

if [ -f "Brewfile" ] && [ "$(uname -s)" = "Darwin" ]; then
  brew bundle check >/dev/null 2>&1 || {
    echo "==> Installing Homebrew dependencies..."
    brew bundle install --verbose
  }

  # We do this so we can install goenv >= 2, which is in beta, so we can
  # install newer versions of Go than 1.11.
  if [ -n "$(brew info --json goenv | jq -r '.[0].installed[] | select(.version | test("^HEAD-") | not)')" ]; then
    echo "==> Installing latest version of goenv..."
    brew uninstall goenv
    brew install --HEAD goenv
  fi
fi

if command -v rbenv >/dev/null 2>&1 && [ -z "$(rbenv version-name 2>/dev/null)" ]; then
  echo "==> Installing Ruby..."
  rbenv install --skip-existing
  rbenv rehash
fi

if command -v nodenv >/dev/null 2>&1 && [ -z "$(nodenv version-name 2>/dev/null)" ]; then
  echo "==> Installing Node..."
  nodenv install --skip-existing
  nodenv rehash
fi

if command -v goenv >/dev/null 2>&1 && [ -z "$(goenv version-name 2>/dev/null)" ]; then
  echo "==> Installing Go..."
  goenv install --skip-existing
  goenv rehash
fi

which bundle >/dev/null 2>&1 || {
  echo "==> Installing Bundler..."
  gem install bundler
  rbenv rehash
}

bundle check >/dev/null 2>&1 || {
  echo "==> Installing Ruby dependencies..."
  bundle install
}

echo "==> Installing Node dependencies..."
npm install

goenv which vale >/dev/null 2>&1 || {
  echo "==> Installing Vale..."
  go get github.com/errata-ai/vale
}
